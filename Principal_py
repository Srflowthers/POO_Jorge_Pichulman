import datetime

import os


# Clase base Mascota
class Mascota:
    def __init__(self,nombre,fecha_nacimiento=None):
        self.nombre = nombre
        self.fecha_nacimiento = fecha_nacimiento if fecha_nacimiento else datetime.datetime.now().strftime("%d/%m/%y")
        self.estado_hambre = 50
        self.estado_sueno = 30
        self.estado_suciedad = 30
        self.estado_felicidad = 50

    def get_fecha(self):
        fecha = (f"Fecha de nacimiento de {self.nombre}: {self.fecha_nacimiento}")
        return fecha

#METODO ALIMENTAR MASCOTA DEBE AUMENTAR FELICIDAD
    def alimentar(self):
        if self.estado_hambre >= 100:
            print(f"{self.nombre} ya esta lleno")
        else:
            self.estado_hambre += 20
            self.estado_felicidad += 5

            if self.estado_hambre > 100:
                self.estado_hambre = 100
            print(f"Has alimentado a {self.nombre}. Hambre ahora: {self.estado_hambre}/100")

    def estado(self):
        print(f"""
        --- Estado de {self.nombre} ---
        Hambre: {self.estado_hambre}/100
        Sueno: {self.estado_sueno}/100
        Suciedad: {self.estado_suciedad}/100
        Felicidad: {self.estado_felicidad}/100
        """)
    def accion(self):
        return "Hace algo..."

# Subclases con herencia
class Ave(Mascota):
    def __init__(self, nombre, fecha_nacimiento=None):
        super().__init__(nombre, fecha_nacimiento)   # inicializa como Mascota
        self.estado_felicidad = 100
        self.estado_sueno = 100

    def accion(self):
        return f"{self.nombre} esta volando"

class Reptil(Mascota):
    def accion(self):
        return f"{self.nombre} se arrastra lentamente"


class Pez(Mascota):
    def accion(self):
        return f"{self.nombre} nada felizmente"

class Anfibio(Mascota):
    def accion(self):
        return f"{self.nombre} nada y salta"

class Mamifero(Mascota):
    def accion(self):
        return f"{self.nombre} corre rapido"



import os

def limpiar_consola():
    os.system("cls" if os.name == "nt" else "clear")

def menu():
    limpiar_consola()
    print("""
    === TIPOS DE MASCOTA ===
    1. Ave
    2. Reptil
    3. Pez
    4. Anfibio
    5. Mamifero
    """)

    def validar(tipo, nombre):
        errores = {"tipo_valido": True, "nombre_valido": True}

        if not tipo.isdigit() or not (1 <= int(tipo) <= 5):
            errores["tipo_valido"] = False

        if not nombre.isalpha():
            errores["nombre_valido"] = False

        return errores

    tipo = input("Elige el tipo de mascota: ")
    nombre = input("Ingresa el nombre de tu mascota: ")

    resultado = validar(tipo, nombre)

    if not resultado["tipo_valido"]:
        print(" Error: la opción debe ser un número entre 1 y 5.")
    if not resultado["nombre_valido"]:
        print("Error: el nombre solo puede contener letras.")

    if resultado["tipo_valido"] and resultado["nombre_valido"]:
        tipo = int(tipo)

        if tipo == 1:
            mascota = Ave(nombre)
        elif tipo == 2:
            mascota = Reptil(nombre)
        elif tipo == 3:
            mascota = Pez(nombre)
        elif tipo == 4:
            mascota = Anfibio(nombre)
        elif tipo == 5:
            mascota = Mamifero(nombre)

        print(f" Mascota creada: {mascota}")
        return mascota
    else:
        input("Presiona ENTER para intentar nuevamente...")
        return menu()

# --- Programa principal ---
mascota = menu()

while True:
    print("""
    === MENU DE MASCOTA ===
    1. Ver estado
    2. Alimentar
    3. Ver fecha de nacimiento
    4. Accion especial
    5. Testing
    6. Salir
    """)

    opcion = input("Elige una opcion: ")

    if opcion == "1":
        mascota.estado()
    elif opcion == "2":
        mascota.alimentar()
    elif opcion == "3":
        mascota.get_fecha()
    elif opcion == "4":
        print(mascota.accion())
    elif opcion == "5":
        obt_fecha = mascota.get_fecha()
        print(f"Rescatando el valor: {obt_fecha}")
    elif opcion == "6":
        print("chauu xd Saliendo del juego...")
        break
    else:
        print("Opcion no valida, intenta de nuevo.")
